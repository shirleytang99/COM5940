from flask import Flask, render_template, request, json, redirect, session
from flask import Markup
from flask_login import LoginManager, login_user, logout_user, login_required, UserMixin
import requests

app = Flask(__name__)
app.config["DEBUG"] = False
app.config['SECRET_KEY'] = "JutzX21JOBqOdxlCV8xqqnxD"
login_manager = LoginManager()
login_manager.init_app(app)
login_manager.login_view = 'login'


@login_manager.user_loader
def load_user(user_id):
    return User.get(user_id)

class User(UserMixin):
  def __init__(self,id):
    self.id = id

@app.route("/")
@login_required
def home():
    return render_template('homepage.html',username=current_user.username)

@app.route("/table")
@login_required
def table():
    r = requests.get('https://api.airtable.com/v0/app65vUW7fVUSBqwi/Imported%20table?api_key=keytIXhS7YQcZwe4a')
    dict = r.json()
    dataset = []
    for i in dict['records']:
         dict = i['fields']
         del dict["pics"]
         dataset.append(dict)
    return render_template('table.html', entries=dataset,username=current_user.username)

@app.route("/chart")
@login_required
def chart():
    r = requests.get('https://api.airtable.com/v0/appDEJ289r95fbxBt/Rollup?api_key=keytIXhS7YQcZwe4a&maxRecords=7&view=Grid%20view')
    dict1 = r.json()
    dict2 = {}
    dataset = []
    name_list = []
    total_entries_list = []
    for i in dict1['records']:
         dict2 = i['fields']
         dataset.append(dict2)
    for item in dataset:
        name_list.append(item.get('User'))
        total_entries_list.append(item.get('Rollup_cred_sum'))
    return render_template('flask_chart.html', entries = zip(name_list, total_entries_list))

@app.route("/map")
@login_required
def map():
    return render_template('map.html',username=current_user.username)

@app.route("/login")
def login():
    return render_template('login.html')

@app.route("/process",methods=['POST'])
def process():
    email = request.form['email']
    password = request.form['password']
    message = "Email is: " + email + " and the password is: " + password
    return render_template('map.html', message=message)

@app.route('/logout/')
@login_required
def logout():
    logout_user()
    message = 'Thanks for logging out.'
    return render_template('login.html', message=message)

if __name__ == '__main__':
   app.run(debug = True)
